{"ast":null,"code":"const createBlog = async blog => {\n  const response = await fetch(\"http://localhost:8000/api/blogs\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: blog\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst getBlogs = async () => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst getBlogById = async id => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/\" + id, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst getBlogsByCategoryId = async categoryId => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/category/\" + categoryId, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst updateBlog = async id => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst deleteBlog = async id => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst blogService = {\n  createBlog,\n  getBlogs,\n  getBlogById,\n  getBlogsByCategoryId,\n  deleteBlog,\n  updateBlog\n};\nexport default blogService;","map":{"version":3,"names":["createBlog","blog","response","fetch","method","headers","body","ok","res","json","responseData","getBlogs","data","blogsApiData","error","Error","getBlogById","id","getBlogsByCategoryId","categoryId","updateBlog","deleteBlog","blogService"],"sources":["C:/Users/hadeg/Downloads/CS apps/iX stuff/blogApp/frontend/src/services/blogService.js"],"sourcesContent":["const createBlog = async (blog) => {\r\n  const response = await fetch(\"http://localhost:8000/api/blogs\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: blog,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    let res = await response.json();\r\n    throw res;\r\n  }\r\n\r\n  const responseData = await response.json();\r\n  return responseData;\r\n};\r\n\r\nconst getBlogs = async () => {\r\n  try {\r\n    const data = await fetch(\r\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\",\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nconst getBlogById = async (id) => {\r\n  try {\r\n    const data = await fetch(\r\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/\"+id,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\n\r\nconst getBlogsByCategoryId = async (categoryId) => {\r\n  try {\r\n    const data = await fetch(\r\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/category/\" +\r\n        categoryId,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nconst updateBlog = async (id) => {\r\n  try {\r\n    const data = await fetch(\r\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/\"+id,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nconst deleteBlog = async (id) => {\r\n  try {\r\n    const data = await fetch(\r\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/\" +id,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\n\r\nconst blogService = {\r\n  createBlog,\r\n  getBlogs,\r\n  getBlogById,\r\n  getBlogsByCategoryId,\r\n  deleteBlog,\r\n  updateBlog\r\n};\r\n\r\n\r\nexport default blogService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}