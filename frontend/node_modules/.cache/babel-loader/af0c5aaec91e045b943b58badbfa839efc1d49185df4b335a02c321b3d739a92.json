{"ast":null,"code":"const createBlog = async blog => {\n  console.log(\"createBLog\", blog);\n  const response = await fetch(\"http://localhost:8000//api/blogs\", {\n    method: \"POST\",\n    headers: {\n      // \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: blog\n  });\n  console.log(\"response\", response);\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"SOmething went wrong\");\n      throw error.message;\n    }\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst fetchBlogs = async () => {\n  const response = await fetch(\"http://localhost:8000/api/blogs\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst fetchBlogByID = async id => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst fetchBlogsByCategoryId = async categoryId => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/categories/\" + categoryId, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst fetchBlogsByAuthorId = async authorId => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/author/\" + authorId, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst updateBlog = async blog => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + blog.id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: JSON.stringify(blog)\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst deleteBlog = async id => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst blogService = {\n  createBlog,\n  fetchBlogs,\n  fetchBlogByID,\n  fetchBlogsByCategoryId,\n  fetchBlogsByAuthorId,\n  updateBlog,\n  deleteBlog\n};\nexport default blogService;","map":{"version":3,"names":["createBlog","blog","console","log","response","fetch","method","headers","Authorization","JSON","parse","localStorage","getItem","token","body","ok","res","json","message","stringify","err","error","Error","responseData","fetchBlogs","blogsApiData","fetchBlogByID","id","fetchBlogsByCategoryId","categoryId","fetchBlogsByAuthorId","authorId","updateBlog","deleteBlog","blogService"],"sources":["C:/Users/hadeg/Downloads/CS apps/iX stuff/blogApp/frontend/src/services/blogService.js"],"sourcesContent":["const createBlog = async (blog) => {\r\n  console.log(\"createBLog\", blog)\r\n  const response = await fetch(\"http://localhost:8000//api/blogs\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      // \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\r\n    },\r\n    body: blog,\r\n  });\r\n\r\n  console.log(\"response\", response)\r\n\r\n  if (!response.ok) {\r\n    try{\r\n      let res = await response.json();\r\n    throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err)\r\n      const error = new Error(\"SOmething went wrong\")\r\n      throw error.message\r\n    }\r\n  }\r\n\r\n  const responseData = await response.json();\r\n  return responseData;\r\n};\r\n\r\nconst fetchBlogs = async () => {\r\n  const response = await fetch(\"http://localhost:8000/api/blogs\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const blogsApiData = await response.json();\r\n  return blogsApiData;\r\n};\r\n\r\nconst fetchBlogByID = async (id) => {\r\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const blogsApiData = await response.json();\r\n  return blogsApiData;\r\n};\r\n\r\nconst fetchBlogsByCategoryId = async (categoryId) => {\r\n  const response = await fetch(\r\n    \"http://localhost:8000/api/blogs/categories/\" + categoryId,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const blogsApiData = await response.json();\r\n  return blogsApiData;\r\n};\r\n\r\nconst fetchBlogsByAuthorId = async (authorId) => {\r\n  const response = await fetch(\r\n    \"http://localhost:8000/api/blogs/author/\" + authorId,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const blogsApiData = await response.json();\r\n  return blogsApiData;\r\n};\r\n\r\nconst updateBlog = async (blog) => {\r\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + blog.id, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n       Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\r\n    },\r\n    body: JSON.stringify(blog),\r\n  });\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const blogsApiData = await response.json();\r\n  return blogsApiData;\r\n};\r\n\r\nconst deleteBlog = async (id) => {\r\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const blogsApiData = await response.json();\r\n  return blogsApiData;\r\n};\r\n\r\nconst blogService = {\r\n  createBlog,\r\n  fetchBlogs,\r\n  fetchBlogByID,\r\n  fetchBlogsByCategoryId,\r\n  fetchBlogsByAuthorId,\r\n  updateBlog,\r\n  deleteBlog,\r\n};\r\n\r\nexport default blogService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}