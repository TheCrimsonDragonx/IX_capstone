{"ast":null,"code":"const register = async userData => {\n  const response = await fetch(\"http://localhost:8000/api/auth/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\nconst login = async userData => {\n  const response = await fetch(\"http://localhost:8000/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\nconst getUser = async authorId => {\n  const response = await fetch(`http://localhost:8000/api/auth/user/${authorId}`);\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst updateUser = async (userId, userData) => {\n  const response = await fetch(`http://localhost:8000/api/auth/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      // \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: userData\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst authService = {\n  register,\n  login,\n  getUser,\n  updateUser\n};\nexport default authService;","map":{"version":3,"names":["register","userData","response","fetch","method","headers","body","JSON","stringify","ok","res","json","responseData","localStorage","setItem","data","login","getUser","authorId","updateUser","userId","Authorization","parse","getItem","token","authService"],"sources":["C:/Users/hadeg/Downloads/CS apps/iX stuff/blogApp/frontend/src/services/authService.js"],"sourcesContent":["const register = async (userData) => {\r\n    const response = await fetch(\"http://localhost:8000/api/auth/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      let res = await response.json();\r\n      throw res;\r\n    }\r\n  \r\n    const responseData = await response.json();\r\n    localStorage.setItem(\"user\", JSON.stringify(responseData.data));\r\n    return responseData;\r\n  };\r\n  \r\n\r\n  const login = async (userData) => {\r\n    const response = await fetch(\"http://localhost:8000/api/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      let res = await response.json();\r\n      throw res;\r\n    }\r\n  \r\n    const responseData = await response.json();\r\n    localStorage.setItem(\"user\", JSON.stringify(responseData.data));\r\n    return responseData;\r\n  };\r\n  \r\n  const getUser = async (authorId) => {\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/auth/user/${authorId}`\r\n    );\r\n  \r\n    if (!response.ok) {\r\n      let res = await response.json();\r\n      throw res;\r\n    }\r\n  \r\n    const responseData = await response.json();\r\n    return responseData;\r\n  };\r\n\r\n\r\n  const updateUser = async (userId, userData) => {\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/auth/user/${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          // \"Content-Type\": \"application/json\",\r\n          Authorization:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\r\n        },\r\n        body: userData,\r\n      }\r\n    );\r\n  \r\n    if (!response.ok) {\r\n      let res = await response.json();\r\n      throw res;\r\n    }\r\n  \r\n    const responseData = await response.json();\r\n    return responseData;\r\n  };\r\n  \r\n  const authService = {\r\n    register,\r\n    login,\r\n    getUser,\r\n    updateUser\r\n  };\r\n  \r\n  export default authService;\r\n\r\n\r\n  "],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;IACtEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,IAAIC,GAAG,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC/B,MAAMD,GAAG;EACX;EAEA,MAAME,YAAY,GAAG,MAAMV,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1CE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACI,YAAY,CAACG,IAAI,CAAC,CAAC;EAC/D,OAAOH,YAAY;AACrB,CAAC;AAGD,MAAMI,KAAK,GAAG,MAAOf,QAAQ,IAAK;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;IACnEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,IAAIC,GAAG,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC/B,MAAMD,GAAG;EACX;EAEA,MAAME,YAAY,GAAG,MAAMV,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1CE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACI,YAAY,CAACG,IAAI,CAAC,CAAC;EAC/D,OAAOH,YAAY;AACrB,CAAC;AAED,MAAMK,OAAO,GAAG,MAAOC,QAAQ,IAAK;EAClC,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CACzB,uCAAsCe,QAAS,EAClD,CAAC;EAED,IAAI,CAAChB,QAAQ,CAACO,EAAE,EAAE;IAChB,IAAIC,GAAG,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC/B,MAAMD,GAAG;EACX;EAEA,MAAME,YAAY,GAAG,MAAMV,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1C,OAAOC,YAAY;AACrB,CAAC;AAGD,MAAMO,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEnB,QAAQ,KAAK;EAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,uCAAsCiB,MAAO,EAAC,EAC/C;IACEhB,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP;MACAgB,aAAa,EACX,SAAS,GAAGd,IAAI,CAACe,KAAK,CAACT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;IACzD,CAAC;IACDlB,IAAI,EAAEL;EACR,CACF,CAAC;EAED,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,IAAIC,GAAG,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC/B,MAAMD,GAAG;EACX;EAEA,MAAME,YAAY,GAAG,MAAMV,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1C,OAAOC,YAAY;AACrB,CAAC;AAED,MAAMa,WAAW,GAAG;EAClBzB,QAAQ;EACRgB,KAAK;EACLC,OAAO;EACPE;AACF,CAAC;AAED,eAAeM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}